{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nconst cors = require(\"cors\");\n\nexport default function SearchSunriseSunset(dateRange) {\n  _s();\n\n  app.use(cors());\n  const [sunrise, setSunrise] = useState(null); // Format date to \"yyyy-MM-dd\"\n\n  const startDate = dateRange.dateRange[0].startDate.toLocaleString('sv-SE').slice(0, 10);\n  const endDate = dateRange.dateRange[0].endDate.toLocaleString('sv-SE').slice(0, 10); // Get year from startDate & endDate\n\n  const startYear = parseInt(startDate.slice(0, 4));\n  const endYear = parseInt(endDate.slice(0, 4));\n  console.log(`startYear`, startYear);\n  console.log(`endYear`, endYear);\n  useEffect((startYear, endYear) => {\n    if (startYear === endYear) {\n      axios.get(`https://data.weather.gov.hk/weatherAPI/opendata/opendata.php?dataType=SRS&year=`, {\n        startYear\n      }, `&rformat=json`).then(response => {\n        setSunrise(response.data.data);\n      });\n    }\n  }, [dateRange]);\n  console.log(`sunrise`, sunrise); // Get Request with filter - SunriseSunset\n  // if (sunrise !== null && sunrise !== undefined) {\n  //     return (\n  //         sunrise.map((data, index) => {\n  //             return(\n  //                 <div className={index}>\n  //                     <p>{data}</p>\n  //                 </div>\n  //             )\n  //         })\n  //     )} else { \n  //         return (<p>Problem Occurs</p>) }\n}\n\n_s(SearchSunriseSunset, \"SBnwjBryu1y3wquOT9XtQzYWLrw=\");\n\n_c = SearchSunriseSunset;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchSunriseSunset\");","map":{"version":3,"sources":["/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/components/SearchSunriseSunset.js"],"names":["axios","useState","useEffect","cors","require","SearchSunriseSunset","dateRange","app","use","sunrise","setSunrise","startDate","toLocaleString","slice","endDate","startYear","parseInt","endYear","console","log","get","then","response","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,eAAe,SAASC,mBAAT,CAA6BC,SAA7B,EAAwC;AAAA;;AACnDC,EAAAA,GAAG,CAACC,GAAJ,CAAQL,IAAI,EAAZ;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC,CAFmD,CAInD;;AACA,QAAMU,SAAS,GAAGL,SAAS,CAACA,SAAV,CAAoB,CAApB,EAAuBK,SAAvB,CAAiCC,cAAjC,CAAgD,OAAhD,EAAyDC,KAAzD,CAA+D,CAA/D,EAAiE,EAAjE,CAAlB;AACA,QAAMC,OAAO,GAAGR,SAAS,CAACA,SAAV,CAAoB,CAApB,EAAuBQ,OAAvB,CAA+BF,cAA/B,CAA8C,OAA9C,EAAuDC,KAAvD,CAA6D,CAA7D,EAA+D,EAA/D,CAAhB,CANmD,CAQnD;;AACA,QAAME,SAAS,GAAGC,QAAQ,CAACL,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAkB,CAAlB,CAAD,CAA1B;AACA,QAAMI,OAAO,GAAID,QAAQ,CAACF,OAAO,CAACD,KAAR,CAAc,CAAd,EAAgB,CAAhB,CAAD,CAAzB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAa,WAAb,EAAwBJ,SAAxB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAa,SAAb,EAAsBF,OAAtB;AAEAf,EAAAA,SAAS,CAAC,CAACa,SAAD,EAAWE,OAAX,KAAuB;AAC7B,QAAIF,SAAS,KAAKE,OAAlB,EAA2B;AACvBjB,MAAAA,KAAK,CAACoB,GAAN,CAAW,iFAAX,EAA4F;AAACL,QAAAA;AAAD,OAA5F,EAAyG,eAAzG,EAAyHM,IAAzH,CAA+HC,QAAD,IAAc;AACxIZ,QAAAA,UAAU,CAACY,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAV;AACH,OAFD;AAGH;AACJ,GANQ,EAMN,CAACjB,SAAD,CANM,CAAT;AAOAY,EAAAA,OAAO,CAACC,GAAR,CAAa,SAAb,EAAsBV,OAAtB,EArBmD,CAwBnD;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIH;;GAzCuBJ,mB;;KAAAA,mB","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nconst cors = require(\"cors\");\n\nexport default function SearchSunriseSunset(dateRange) {\n    app.use(cors())\n    const [sunrise, setSunrise] = useState(null);\n\n    // Format date to \"yyyy-MM-dd\"\n    const startDate = dateRange.dateRange[0].startDate.toLocaleString('sv-SE').slice(0,10);\n    const endDate = dateRange.dateRange[0].endDate.toLocaleString('sv-SE').slice(0,10);\n\n    // Get year from startDate & endDate\n    const startYear = parseInt(startDate.slice(0,4));\n    const endYear =  parseInt(endDate.slice(0,4));\n    console.log(`startYear`,startYear);\n    console.log(`endYear`,endYear);\n\n    useEffect((startYear,endYear) => {\n        if (startYear === endYear) { \n            axios.get(`https://data.weather.gov.hk/weatherAPI/opendata/opendata.php?dataType=SRS&year=`,{startYear},`&rformat=json`).then((response) => {\n                setSunrise(response.data.data);\n            });\n        } \n    }, [dateRange]);\n    console.log(`sunrise`,sunrise);\n\n\n    // Get Request with filter - SunriseSunset\n\n    // if (sunrise !== null && sunrise !== undefined) {\n    //     return (\n    //         sunrise.map((data, index) => {\n    //             return(\n    //                 <div className={index}>\n    //                     <p>{data}</p>\n\n    //                 </div>\n    //             )\n    //         })\n    //     )} else { \n    //         return (<p>Problem Occurs</p>) }\n\n\n  \n}"]},"metadata":{},"sourceType":"module"}