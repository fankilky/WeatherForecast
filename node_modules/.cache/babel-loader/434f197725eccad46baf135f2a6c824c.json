{"ast":null,"code":"import _slicedToArray from\"/Users/likingyan/Documents/Butler/ButlerWeatherForecast/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import{useState,useEffect}from\"react\";import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faTemperatureHalf}from\"@fortawesome/free-solid-svg-icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var baseURL=\"https://data.weather.gov.hk/weatherAPI/opendata/weather.php?dataType=rhrread&lang=en\";export default function CurrentWeather(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),current=_useState2[0],setCurrent=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setloading=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),region=_useState6[0],setRegion=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),filtered=_useState8[0],setFiltered=_useState8[1];// Get Request - CurrentWeather\nuseEffect(function(){axios.get(baseURL).then(function(response){setCurrent(response.data.temperature.data);setloading(false);});},[]);var getRegion=function getRegion(e){setRegion(e.currentTarget.value);setFiltered(current[e.currentTarget.value]);};if(loading===true){return/*#__PURE__*/_jsx(\"p\",{children:\"loading...\"});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"search_container row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search_dropbox col-lg-6\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"region\",className:\"search_label\",children:\"Please choose Region:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"region\",name:\"regionlist\",form:\"regionform\",className:\"search_select\",onChange:function onChange(e){return getRegion(e);},children:current!==null&&current!==undefined?current.map(function(data,index){return/*#__PURE__*/_jsx(\"option\",{value:index,children:data.place},index);}):/*#__PURE__*/_jsx(_Fragment,{children:\" \"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"region_weather col-lg-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"region_weather_box\",children:filtered!==null?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"region_place\",children:filtered.place}),/*#__PURE__*/_jsxs(\"div\",{className:\"region_temp_container\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"region_temp_icon\",icon:faTemperatureHalf}),/*#__PURE__*/_jsxs(\"p\",{className:\"region_temp\",children:[filtered.value,\"\\xB0C\"]})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"region_place\",children:current[region].place}),/*#__PURE__*/_jsxs(\"div\",{className:\"region_temp_container\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"region_temp_icon\",icon:faTemperatureHalf}),/*#__PURE__*/_jsxs(\"p\",{className:\"region_temp\",children:[current[region].value,\"\\xB0C\"]})]})]})})})]})});//   if (current !== null && current !== undefined) {\n//       return (\n//           current.map((data, index) => {\n//               return(\n//                   <div key={index}>\n//                       <p>{data.place}</p>\n//                   </div>\n//               )\n//           })\n//       )} else { \n//           return (<p>Problem Occurs</p>) }\n}","map":{"version":3,"sources":["/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/CurrentWeather.js"],"names":["axios","useState","useEffect","FontAwesomeIcon","faTemperatureHalf","baseURL","CurrentWeather","current","setCurrent","loading","setloading","region","setRegion","filtered","setFiltered","get","then","response","data","temperature","getRegion","e","currentTarget","value","undefined","map","index","place"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTemperatureHalf } from \"@fortawesome/free-solid-svg-icons\";\nconst baseURL = \"https://data.weather.gov.hk/weatherAPI/opendata/weather.php?dataType=rhrread&lang=en\";\n\nexport default function CurrentWeather() {\n  const [current, setCurrent] = useState(null);\n  const [loading, setloading] = useState(true);\n  const [region, setRegion] = useState(0);\n  const [filtered, setFiltered] = useState(null);\n\n\n  // Get Request - CurrentWeather\n  useEffect(() => {\n    axios.get(baseURL).then((response) => {\n        setCurrent(response.data.temperature.data);\n        setloading(false);\n    })\n  }, []);\n\n  const getRegion = (e) => {\n    setRegion(e.currentTarget.value);\n    setFiltered(current[e.currentTarget.value])\n  };\n\n\n  if (loading === true) { return (<p>loading...</p>)}\n\n  return (\n      <>\n        <div className=\"search_container row\">\n            <div className=\"search_dropbox col-lg-6\">\n                <label htmlFor=\"region\" className=\"search_label\">Please choose Region:</label>\n                <select id=\"region\" name=\"regionlist\" form=\"regionform\" className=\"search_select\" onChange={(e) => getRegion(e)}>\n                {current !== null && current !== undefined ? \n                    current.map((data,index) => {\n                        return (<option key={index} value={index}>{data.place}</option>)\n                    }):<> </>}\n                </select>\n            </div>\n            <div className=\"region_weather col-lg-6\">\n                <div className=\"region_weather_box\">\n                    {filtered !== null  ? \n                            (<>\n                                <p className=\"region_place\">{filtered.place}</p>\n                                <div className=\"region_temp_container\">\n                                    <FontAwesomeIcon className=\"region_temp_icon\" icon={faTemperatureHalf} />\n                                    <p className=\"region_temp\">{filtered.value}°C</p>\n                                </div>\n                            </>): <>\n                                <p className=\"region_place\">{current[region].place}</p>\n                                <div className=\"region_temp_container\">\n                                    <FontAwesomeIcon className=\"region_temp_icon\"  icon={faTemperatureHalf} />\n                                    <p className=\"region_temp\">{current[region].value}°C</p>\n                                </div>\n                            </>}\n                 </div>\n            </div>\n        </div>\n      </>\n  )\n//   if (current !== null && current !== undefined) {\n//       return (\n//           current.map((data, index) => {\n//               return(\n//                   <div key={index}>\n//                       <p>{data.place}</p>\n\n//                   </div>\n//               )\n//           })\n//       )} else { \n//           return (<p>Problem Occurs</p>) }\n\n}"]},"metadata":{},"sourceType":"module"}