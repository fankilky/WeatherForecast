{"ast":null,"code":"import _slicedToArray from\"/Users/likingyan/Documents/Butler/ButlerWeatherForecast/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import{useState,useEffect}from\"react\";import{ResponsiveLine}from'@nivo/line';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function SearchSunriseSunset(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),yearData=_useState2[0],setYearData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setloading=_useState4[1];useEffect(function(){var year=Object.values(props);var API=\"https://data.weather.gov.hk/weatherAPI/opendata/opendata.php?dataType=SRS&year=\".concat(year,\"&rformat=json\");axios.get(API,{mode:'cors'}).then(function(response){setYearData(response.data.data);});setloading(false);},[props]);// push all sunrise time in a array \nvar sunriseStat=[];useEffect(function(){for(var i=0;i<yearData.length;i++){var _yearData$i,_yearData$i2;sunriseStat.push({\"x\":yearData===null||yearData===void 0?void 0:(_yearData$i=yearData[i])===null||_yearData$i===void 0?void 0:_yearData$i[0],\"y\":yearData===null||yearData===void 0?void 0:(_yearData$i2=yearData[i])===null||_yearData$i2===void 0?void 0:_yearData$i2[1]});};},[yearData]);// push all sunrise time in a array \nvar sunsetStat=[];useEffect(function(){for(var i=0;i<yearData.length;i++){var _yearData$i3,_yearData$i4;sunsetStat.push({\"x\":yearData===null||yearData===void 0?void 0:(_yearData$i3=yearData[i])===null||_yearData$i3===void 0?void 0:_yearData$i3[0],\"y\":yearData===null||yearData===void 0?void 0:(_yearData$i4=yearData[i])===null||_yearData$i4===void 0?void 0:_yearData$i4[3]});};},[yearData]);var data=[{\"id\":\"Sunrise\",\"color\":\"hsl(268, 70%, 50%)\",\"data\":sunriseStat},{\"id\":\"Sunset\",\"color\":\"hsl(331, 70%, 50%)\",\"data\":sunsetStat}];if(loading===true){return/*#__PURE__*/_jsx(\"p\",{children:\"loading...\"});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(ResponsiveLine,{data:data,margin:{top:50,right:110,bottom:50,left:60},xScale:{type:\"time\",format:\"%Y-%m-%d\",precision:'day'},xFormat:\"time:%Y-%m-%d\",yScale:{type:\"linear\",min:\"auto\",max:\"auto\",format:\"%Hh%M [%d]\",stacked:false,reverse:false},yFormat:\"time:%Hh%M [%d]\",curve:\"cardinal\",axisTop:null,axisRight:null,axisLeft:{orient:\"left\",tickSize:5,tickPadding:5,tickRotation:0,legend:\"Time\",legendOffset:-40,legendPosition:\"middle\"},axisBottom:{format:\"%x\",//tickValues: \"every 2 days\",\n// tickRotation: -90,\nlegend:\"time scale\",legendOffset:-12},colors:{scheme:\"nivo\"},pointSize:10,pointColor:{theme:\"background\"},pointBorderWidth:2,pointBorderColor:{from:\"serieColor\"},pointLabel:\"y\",pointLabelYOffset:-12,useMesh:true,theme:{\"background\":\"rgba(194,194,194,0.5)\"},legends:[{anchor:\"bottom-right\",direction:\"column\",justify:false,translateX:100,translateY:0,itemsSpacing:0,itemDirection:\"left-to-right\",itemWidth:80,itemHeight:20,itemOpacity:0.75,symbolSize:12,symbolShape:\"circle\",symbolBorderColor:\"rgba(0, 0, 0, .5)\",effects:[{on:\"hover\",style:{itemBackground:\"rgba(0, 0, 0, .03)\",itemOpacity:1}}]}]})});}","map":{"version":3,"sources":["/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/components/SearchSunriseSunset.js"],"names":["axios","useState","useEffect","ResponsiveLine","SearchSunriseSunset","props","yearData","setYearData","loading","setloading","year","Object","values","API","get","mode","then","response","data","sunriseStat","i","length","push","sunsetStat","top","right","bottom","left","type","format","precision","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","scheme","theme","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { ResponsiveLine } from '@nivo/line'\n\n\nexport default function SearchSunriseSunset(props) {\n    const [yearData, setYearData] = useState(\"\")\n    const [loading, setloading] = useState(true);\n\n\n    useEffect(() => {\n        let year = Object.values(props);\n        let API = `https://data.weather.gov.hk/weatherAPI/opendata/opendata.php?dataType=SRS&year=${year}&rformat=json`;\n            axios.get(API, {mode:'cors'}).then((response) => {\n                setYearData(response.data.data);\n            });\n        setloading(false);\n        }, [props]);\n\n            \n        // push all sunrise time in a array \n        let sunriseStat = [];\n        useEffect(() => {\n            for (let i = 0; i < yearData.length; i++) {\n                sunriseStat.push({\"x\":yearData?.[i]?.[0],\"y\":yearData?.[i]?.[1]})\n            };\n                \n        }, [yearData]);\n\n        // push all sunrise time in a array \n        let sunsetStat = [];\n        useEffect(() => {\n            for (let i = 0; i < yearData.length; i++) {\n                sunsetStat.push({\"x\":yearData?.[i]?.[0],\"y\":yearData?.[i]?.[3]})\n            };\n        }, [yearData]);\n\n        const data = [\n                {\n                  \"id\": \"Sunrise\",\n                  \"color\": \"hsl(268, 70%, 50%)\",\n                  \"data\": sunriseStat\n                },\n                {\n                    \"id\": \"Sunset\",\n                    \"color\": \"hsl(331, 70%, 50%)\",\n                    \"data\": sunsetStat\n                  },\n            ]\n\n        \n        if (loading === true) { return (<p>loading...</p>)}\n\n        return (\n        <>\n            <ResponsiveLine\n                data={data}\n                margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n                xScale={{\n                    type: \"time\",\n                    format: \"%Y-%m-%d\",\n                    precision: 'day'\n                }}\n                xFormat=\"time:%Y-%m-%d\"\n                yScale={{\n                    type: \"linear\",\n                    min: \"auto\",\n                    max: \"auto\",\n                    format: \"%Hh%M [%d]\",\n                    stacked: false,\n                    reverse: false,\n                }}\n                yFormat=\"time:%Hh%M [%d]\"\n                curve=\"cardinal\"\n                axisTop={null}\n                axisRight={null}\n                axisLeft={{\n                orient: \"left\",\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: \"Time\",\n                legendOffset: -40,\n                legendPosition: \"middle\"\n                }}\n                axisBottom={{\n                format: \"%x\",\n                //tickValues: \"every 2 days\",\n                // tickRotation: -90,\n                legend: \"time scale\",\n                legendOffset: -12\n                }}\n                colors={{ scheme: \"nivo\" }}\n                pointSize={10}\n                pointColor={{ theme: \"background\" }}\n                pointBorderWidth={2}\n                pointBorderColor={{ from: \"serieColor\" }}\n                pointLabel=\"y\"\n                pointLabelYOffset={-12}\n                useMesh={true}\n                theme={{\n                    \"background\": \"rgba(194,194,194,0.5)\",}}\n                legends={[\n                {\n                    anchor: \"bottom-right\",\n                    direction: \"column\",\n                    justify: false,\n                    translateX: 100,\n                    translateY: 0,\n                    itemsSpacing: 0,\n                    itemDirection: \"left-to-right\",\n                    itemWidth: 80,\n                    itemHeight: 20,\n                    itemOpacity: 0.75,\n                    symbolSize: 12,\n                    symbolShape: \"circle\",\n                    symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n                    effects: [\n                    {\n                        on: \"hover\",\n                        style: {\n                        itemBackground: \"rgba(0, 0, 0, .03)\",\n                        itemOpacity: 1\n                        }\n                    }\n                    ]\n                }\n                ]}\n            />   \n        </>)\n  \n}\n"]},"metadata":{},"sourceType":"module"}