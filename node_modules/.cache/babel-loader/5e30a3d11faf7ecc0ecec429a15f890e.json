{"ast":null,"code":"var _jsxFileName = \"/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/SunriseSunset.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\"; // import { DateRangePicker } from 'react-date-range';\n// import 'react-date-range/dist/styles.css'; // main css file\n// import 'react-date-range/dist/theme/default.css'; // theme css file\n// import { addDays } from 'date-fns';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = \"https://data.weather.gov.hk/weatherAPI/opendata/opendata.php?dataType=SRS&year=2021&rformat=json\";\nexport default function SunriseSunset() {\n  _s();\n\n  const [sunrise, setSunrise] = useState(null); // Get Request with filter - SunriseSunset\n\n  useEffect(() => {\n    axios.get(baseURL).then(response => {\n      setSunrise(response.data.data);\n      console.log(`effect`, response.data.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      min: \"2011-02-20T20:20\",\n      max: \"2031-02-20T20:20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true); // if (sunrise !== null && sunrise !== undefined) {\n  //     return (\n  //         sunrise.map((data, index) => {\n  //             return(\n  //                 <div className={index}>\n  //                     <p>{data}</p>\n  //                 </div>\n  //             )\n  //         })\n  //     )} else { \n  //         return (<p>Problem Occurs</p>) }\n}\n\n_s(SunriseSunset, \"SBnwjBryu1y3wquOT9XtQzYWLrw=\");\n\n_c = SunriseSunset;\n\nvar _c;\n\n$RefreshReg$(_c, \"SunriseSunset\");","map":{"version":3,"sources":["/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/SunriseSunset.js"],"names":["axios","useState","useEffect","baseURL","SunriseSunset","sunrise","setSunrise","get","then","response","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;AACA;AACA;AACA;;;;AAEA,MAAMC,OAAO,GAAG,kGAAhB;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC,CADsC,CAGtC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CAACO,GAAN,CAAUJ,OAAV,EAAmBK,IAAnB,CAAyBC,QAAD,IAAc;AAClCH,MAAAA,UAAU,CAACG,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAV;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAa,QAAb,EAAqBH,QAAQ,CAACC,IAAT,CAAcA,IAAnC;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACG;AAAA,4BACG;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAC,kBAAvB;AAA0C,MAAA,GAAG,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA,kBADH,CAXsC,CAkBpC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGH;;GAhCuBN,a;;KAAAA,a","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n// import { DateRangePicker } from 'react-date-range';\n// import 'react-date-range/dist/styles.css'; // main css file\n// import 'react-date-range/dist/theme/default.css'; // theme css file\n// import { addDays } from 'date-fns';\n\nconst baseURL = \"https://data.weather.gov.hk/weatherAPI/opendata/opendata.php?dataType=SRS&year=2021&rformat=json\";\n\nexport default function SunriseSunset() {\n  const [sunrise, setSunrise] = useState(null);\n\n  // Get Request with filter - SunriseSunset\n  useEffect(() => {\n    axios.get(baseURL).then((response) => {\n        setSunrise(response.data.data);\n      console.log(`effect`,response.data.data);\n    });\n  }, []);\n\n  return(\n     <>\n        <input type=\"date\" min=\"2011-02-20T20:20\" max=\"2031-02-20T20:20\"></input>\n        <input type=\"date\"></input>\n     </>\n)\n\n    // if (sunrise !== null && sunrise !== undefined) {\n    //     return (\n    //         sunrise.map((data, index) => {\n    //             return(\n    //                 <div className={index}>\n    //                     <p>{data}</p>\n\n    //                 </div>\n    //             )\n    //         })\n    //     )} else { \n    //         return (<p>Problem Occurs</p>) }\n\n\n}"]},"metadata":{},"sourceType":"module"}