{"ast":null,"code":"var _jsxFileName = \"/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/components/SearchSunriseSunset.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { ResponsiveLine } from '@nivo/line';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchSunriseSunset(props) {\n  _s();\n\n  console.log(Object.values(props));\n  const [yearData, setYearData] = useState(\"\");\n  useEffect(() => {\n    let year = Object.values(props);\n    let API = `https://data.weather.gov.hk/weatherAPI/opendata/opendata.php?dataType=SRS&year=${year}&rformat=json`;\n    axios.get(API, {\n      mode: 'cors'\n    }).then(response => {\n      setYearData(response.data.data);\n    });\n  }, [props]); // let sunriseStat = yearData.jsonarray.map(function(e) {\n  //     return e[0][1]\n  // })\n  // console.log(`sunriseStat`,sunriseStat)\n  // let sunriseData = [];\n  // for(var j = 0; j < yearData.length; j++) {\n  //     sunriseData.push({\"date\": yearData[j][0], \"time\": yearData[j][1]});\n  // }\n  // console.log(sunriseData);\n\n  let sunriseData = yearData.map(e => ({\n    data: e,\n    time: \"label\"\n  }));\n  let data = [{\n    \"id\": \"Sunrise\",\n    \"color\": \"hsl(254, 70%, 50%)\",\n    \"data\": [{\n      \"date\": \"2020-01-01\",\n      \"y\": 131\n    }, {\n      \"date\": \"2020-01-02\",\n      \"y\": 177\n    }, {\n      \"date\": \"2020-01-03\",\n      \"y\": 236\n    }, {\n      \"date\": \"2020-01-04\",\n      \"y\": 120\n    }]\n  }, {\n    \"id\": \"Trans\",\n    \"color\": \"hsl(356, 70%, 50%)\",\n    \"data\": [{\n      \"date\": \"2020-01-01\",\n      \"y\": 49\n    }, {\n      \"date\": \"2020-01-02\",\n      \"y\": 54\n    }, {\n      \"date\": \"2020-01-03\",\n      \"y\": 54\n    }, {\n      \"date\": \"2020-01-04\",\n      \"y\": 35\n    }]\n  }, {\n    \"id\": \"Sunset\",\n    \"color\": \"hsl(45, 70%, 50%)\",\n    \"data\": [{\n      \"date\": \"2020-01-01\",\n      \"y\": 40\n    }, {\n      \"date\": \"2020-01-02\",\n      \"y\": 167\n    }, {\n      \"date\": \"2020-01-03\",\n      \"y\": 29\n    }, {\n      \"date\": \"2020-01-04\",\n      \"y\": 111\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResponsiveLine, {\n      data: data,\n      margin: {\n        top: 50,\n        right: 110,\n        bottom: 50,\n        left: 60\n      },\n      xScale: {\n        type: 'date'\n      },\n      yScale: {\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        stacked: true,\n        reverse: false\n      },\n      yFormat: \" >-.2f\",\n      axisTop: null,\n      axisRight: null,\n      axisBottom: {\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'transportation',\n        legendOffset: 36,\n        legendPosition: 'middle'\n      },\n      axisLeft: {\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'count',\n        legendOffset: -40,\n        legendPosition: 'middle'\n      },\n      pointSize: 10,\n      pointColor: {\n        theme: 'background'\n      },\n      pointBorderWidth: 2,\n      pointBorderColor: {\n        from: 'serieColor'\n      },\n      pointLabelYOffset: -12,\n      useMesh: true,\n      legends: [{\n        anchor: 'bottom-right',\n        direction: 'column',\n        justify: false,\n        translateX: 100,\n        translateY: 0,\n        itemsSpacing: 0,\n        itemDirection: 'left-to-right',\n        itemWidth: 80,\n        itemHeight: 20,\n        itemOpacity: 0.75,\n        symbolSize: 12,\n        symbolShape: 'circle',\n        symbolBorderColor: 'rgba(0, 0, 0, .5)',\n        effects: [{\n          on: 'hover',\n          style: {\n            itemBackground: 'rgba(0, 0, 0, .03)',\n            itemOpacity: 1\n          }\n        }]\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 1\n    }, this), \"    \"]\n  }, void 0, true);\n}\n\n_s(SearchSunriseSunset, \"M/M4V4aROy+oDgwdMrMedD/vvKs=\");\n\n_c = SearchSunriseSunset;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchSunriseSunset\");","map":{"version":3,"sources":["/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/components/SearchSunriseSunset.js"],"names":["axios","useState","useEffect","ResponsiveLine","SearchSunriseSunset","props","console","log","Object","values","yearData","setYearData","year","API","get","mode","then","response","data","sunriseData","map","e","time","top","right","bottom","left","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","theme","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { ResponsiveLine } from '@nivo/line'\n\n\nexport default function SearchSunriseSunset(props) {\n\n    console.log(Object.values(props))\n    const [yearData, setYearData] = useState(\"\")\n\n\n    useEffect(() => {\n        let year = Object.values(props);\n        let API = `https://data.weather.gov.hk/weatherAPI/opendata/opendata.php?dataType=SRS&year=${year}&rformat=json`;\n            axios.get(API, {mode:'cors'}).then((response) => {\n                setYearData(response.data.data);\n            });\n        }, [props]);\n\n        // let sunriseStat = yearData.jsonarray.map(function(e) {\n        //     return e[0][1]\n        // })\n        // console.log(`sunriseStat`,sunriseStat)\n\n        // let sunriseData = [];\n        // for(var j = 0; j < yearData.length; j++) {\n        //     sunriseData.push({\"date\": yearData[j][0], \"time\": yearData[j][1]});\n        // }\n        // console.log(sunriseData);\n        let sunriseData = yearData.map(e => ({\n            data: e,\n            time: \"label\"\n        }));\n\n        let data= [\n            {\n              \"id\": \"Sunrise\",\n              \"color\": \"hsl(254, 70%, 50%)\",\n              \"data\": [\n                {\n                  \"date\": \"2020-01-01\",\n                  \"y\": 131\n                },\n                {\n                  \"date\": \"2020-01-02\",\n                  \"y\": 177\n                },\n                {\n                  \"date\": \"2020-01-03\",\n                  \"y\": 236\n                },\n                {\n                  \"date\": \"2020-01-04\",\n                  \"y\": 120\n                },\n              ]\n            },\n            {\n              \"id\": \"Trans\",\n              \"color\": \"hsl(356, 70%, 50%)\",\n              \"data\": [\n                {\n                  \"date\": \"2020-01-01\",\n                  \"y\": 49\n                },\n                {\n                  \"date\": \"2020-01-02\",\n                  \"y\": 54\n                },\n                {\n                  \"date\": \"2020-01-03\",\n                  \"y\": 54\n                },\n                {\n                  \"date\": \"2020-01-04\",\n                  \"y\": 35\n                },\n              ]},\n            {\n              \"id\": \"Sunset\",\n              \"color\": \"hsl(45, 70%, 50%)\",\n              \"data\": [\n                {\n                  \"date\": \"2020-01-01\",\n                  \"y\": 40\n                },\n                {\n                  \"date\": \"2020-01-02\",\n                  \"y\": 167\n                },\n                {\n                  \"date\": \"2020-01-03\",\n                  \"y\": 29\n                },\n                {\n                  \"date\": \"2020-01-04\",\n                  \"y\": 111\n                }\n              ]\n            },\n          ]\n        return (<>\n<ResponsiveLine\n        data={data}\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n        xScale={{ type: 'date' }}\n        yScale={{\n            type: 'linear',\n            min: 'auto',\n            max: 'auto',\n            stacked: true,\n            reverse: false\n        }}\n        yFormat=\" >-.2f\"\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'transportation',\n            legendOffset: 36,\n            legendPosition: 'middle'\n        }}\n        axisLeft={{\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'count',\n            legendOffset: -40,\n            legendPosition: 'middle'\n        }}\n        pointSize={10}\n        pointColor={{ theme: 'background' }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: 'serieColor' }}\n        pointLabelYOffset={-12}\n        useMesh={true}\n        legends={[\n            {\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 100,\n                translateY: 0,\n                itemsSpacing: 0,\n                itemDirection: 'left-to-right',\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 0.75,\n                symbolSize: 12,\n                symbolShape: 'circle',\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemBackground: 'rgba(0, 0, 0, .03)',\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n    />    </>)\n  \n}"]},"metadata":{},"sourceType":"module"}