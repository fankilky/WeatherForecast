{"ast":null,"code":"var _jsxFileName = \"/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/SunriseSunset.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\"; // import date picker\n\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main css file\n\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nimport { addDays } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = \"https://data.weather.gov.hk/weatherAPI/opendata/opendata.php?dataType=SRS&year=2021&rformat=json\";\nexport default function SunriseSunset() {\n  _s();\n\n  const [sunrise, setSunrise] = useState(null); // Get Request with filter - SunriseSunset\n\n  useEffect(() => {\n    axios.get(baseURL).then(response => {\n      setSunrise(response.data.data);\n      console.log(`effect`, response.data.data);\n    });\n  }, []);\n  const [dateRange, setdateRange] = useState([{\n    startDate: new Date(),\n    endDate: addDays(new Date(), 7)\n  }]);\n  console.log(`dateRange`, dateRange);\n  return /*#__PURE__*/_jsxDEV(DateRangePicker, {\n    onChange: item => setdateRange([item.selection]),\n    showSelectionPreview: true,\n    moveRangeOnFirstSelection: false,\n    minDate: new Date(\"01-01-2018\"),\n    maxDate: new Date(\"12-31-2023\"),\n    months: 2,\n    ranges: dateRange,\n    direction: \"horizontal\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this); // if (sunrise !== null && sunrise !== undefined) {\n  //     return (\n  //         sunrise.map((data, index) => {\n  //             return(\n  //                 <div className={index}>\n  //                     <p>{data}</p>\n  //                 </div>\n  //             )\n  //         })\n  //     )} else { \n  //         return (<p>Problem Occurs</p>) }\n}\n\n_s(SunriseSunset, \"Wh27tM3jCHjdMAOFGHOftNBgTMI=\");\n\n_c = SunriseSunset;\n\nvar _c;\n\n$RefreshReg$(_c, \"SunriseSunset\");","map":{"version":3,"sources":["/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/SunriseSunset.js"],"names":["axios","useState","useEffect","DateRangePicker","addDays","baseURL","SunriseSunset","sunrise","setSunrise","get","then","response","data","console","log","dateRange","setdateRange","startDate","Date","endDate","item","selection"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAO,kCAAP,C,CAA2C;;AAC3C,OAAO,yCAAP,C,CAAkD;;AAClD,SAASC,OAAT,QAAwB,UAAxB;;AAEA,MAAMC,OAAO,GAAG,kGAAhB;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC,CADsC,CAGtC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CAACS,GAAN,CAAUJ,OAAV,EAAmBK,IAAnB,CAAyBC,QAAD,IAAc;AAClCH,MAAAA,UAAU,CAACG,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAV;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAa,QAAb,EAAqBH,QAAQ,CAACC,IAAT,CAAcA,IAAnC;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,CACzC;AACEgB,IAAAA,SAAS,EAAE,IAAIC,IAAJ,EADb;AAEEC,IAAAA,OAAO,EAAEf,OAAO,CAAC,IAAIc,IAAJ,EAAD,EAAa,CAAb;AAFlB,GADyC,CAAD,CAA1C;AAOAL,EAAAA,OAAO,CAACC,GAAR,CAAa,WAAb,EAAwBC,SAAxB;AACA,sBACA,QAAC,eAAD;AACE,IAAA,QAAQ,EAAEK,IAAI,IAAIJ,YAAY,CAAC,CAACI,IAAI,CAACC,SAAN,CAAD,CADhC;AAEE,IAAA,oBAAoB,EAAE,IAFxB;AAGE,IAAA,yBAAyB,EAAE,KAH7B;AAIE,IAAA,OAAO,EAAE,IAAIH,IAAJ,CAAS,YAAT,CAJX;AAKE,IAAA,OAAO,EAAE,IAAIA,IAAJ,CAAS,YAAT,CALX;AAME,IAAA,MAAM,EAAE,CANV;AAOE,IAAA,MAAM,EAAEH,SAPV;AAQE,IAAA,SAAS,EAAC;AARZ;AAAA;AAAA;AAAA;AAAA,UADA,CAnBsC,CA+BpC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGH;;GA7CuBT,a;;KAAAA,a","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n// import date picker\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport { addDays } from 'date-fns';\n\nconst baseURL = \"https://data.weather.gov.hk/weatherAPI/opendata/opendata.php?dataType=SRS&year=2021&rformat=json\";\n\nexport default function SunriseSunset() {\n  const [sunrise, setSunrise] = useState(null);\n\n  // Get Request with filter - SunriseSunset\n  useEffect(() => {\n    axios.get(baseURL).then((response) => {\n        setSunrise(response.data.data);\n      console.log(`effect`,response.data.data);\n    });\n  }, []);\n\n  const [dateRange, setdateRange] = useState([\n    {\n      startDate: new Date(),\n      endDate: addDays(new Date(), 7),\n    }\n  ]);\n\n  console.log(`dateRange`,dateRange);\n  return(\n  <DateRangePicker\n    onChange={item => setdateRange([item.selection])}\n    showSelectionPreview={true}\n    moveRangeOnFirstSelection={false}\n    minDate={new Date(\"01-01-2018\")}\n    maxDate={new Date(\"12-31-2023\")}\n    months={2}\n    ranges={dateRange}\n    direction=\"horizontal\"\n  />)\n\n    // if (sunrise !== null && sunrise !== undefined) {\n    //     return (\n    //         sunrise.map((data, index) => {\n    //             return(\n    //                 <div className={index}>\n    //                     <p>{data}</p>\n\n    //                 </div>\n    //             )\n    //         })\n    //     )} else { \n    //         return (<p>Problem Occurs</p>) }\n\n\n}"]},"metadata":{},"sourceType":"module"}