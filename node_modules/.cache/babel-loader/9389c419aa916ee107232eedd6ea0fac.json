{"ast":null,"code":"var _jsxFileName = \"/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/components/SearchSunriseSunset.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { ResponsiveLine } from '@nivo/line';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchSunriseSunset(props) {\n  _s();\n\n  console.log(Object.values(props));\n  const [yearData, setYearData] = useState(\"\");\n  useEffect(() => {\n    let year = Object.values(props);\n    let API = `https://data.weather.gov.hk/weatherAPI/opendata/opendata.php?dataType=SRS&year=${year}&rformat=json`;\n    axios.get(API, {\n      mode: 'cors'\n    }).then(response => {\n      setYearData(response.data.data);\n    });\n  }, [props]); // let sunriseStat = yearData.jsonarray.map(function(e) {\n  //     return e[0][1]\n  // })\n  // console.log(`sunriseStat`,sunriseStat)\n  // let sunriseData = [];\n  // for(var j = 0; j < yearData.length; j++) {\n  //     sunriseData.push({\"date\": yearData[j][0], \"time\": yearData[j][1]});\n  // }\n  // console.log(sunriseData);\n\n  let data = [{\n    id: 'fake corp. A',\n    data: [{\n      x: '2018-01-01',\n      y: 7\n    }, {\n      x: '2018-01-02',\n      y: 5\n    }, {\n      x: '2018-01-03',\n      y: 11\n    }, {\n      x: '2018-01-04',\n      y: 9\n    }, {\n      x: '2018-01-05',\n      y: 12\n    }, {\n      x: '2018-01-06',\n      y: 16\n    }, {\n      x: '2018-01-07',\n      y: 13\n    }, {\n      x: '2018-01-08',\n      y: 13\n    }]\n  }, {\n    id: 'fake corp. B',\n    data: [{\n      x: '2018-01-04',\n      y: 14\n    }, {\n      x: '2018-01-05',\n      y: 14\n    }, {\n      x: '2018-01-06',\n      y: 15\n    }, {\n      x: '2018-01-07',\n      y: 11\n    }, {\n      x: '2018-01-08',\n      y: 10\n    }, {\n      x: '2018-01-09',\n      y: 12\n    }, {\n      x: '2018-01-10',\n      y: 9\n    }, {\n      x: '2018-01-11',\n      y: 7\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ResponsiveLine, {\n      data: data,\n      margin: {\n        top: 50,\n        right: 110,\n        bottom: 50,\n        left: 60\n      },\n      xScale: {\n        type: 'time',\n        format: '%Y-%m-%d',\n        useUTC: false,\n        precision: 'day'\n      },\n      xFormat: \"time:%Y-%m-%d\",\n      yScale: {\n        type: 'linear',\n        stacked: boolean('stacked', false)\n      },\n      axisLeft: {\n        legend: 'linear scale',\n        legendOffset: 12\n      },\n      axisBottom: {\n        format: '%b %d',\n        tickValues: 'every 2 days',\n        legend: 'time scale',\n        legendOffset: -12\n      },\n      curve: select('curve', curveOptions, 'monotoneX'),\n      enablePointLabel: true,\n      pointSymbol: CustomSymbol,\n      pointSize: 16,\n      pointBorderWidth: 1,\n      pointBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.3]]\n      },\n      useMesh: true,\n      enableSlices: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(SearchSunriseSunset, \"M/M4V4aROy+oDgwdMrMedD/vvKs=\");\n\n_c = SearchSunriseSunset;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchSunriseSunset\");","map":{"version":3,"sources":["/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/components/SearchSunriseSunset.js"],"names":["axios","useState","useEffect","ResponsiveLine","SearchSunriseSunset","props","console","log","Object","values","yearData","setYearData","year","API","get","mode","then","response","data","id","x","y","top","right","bottom","left","type","format","useUTC","precision","stacked","boolean","legend","legendOffset","tickValues","select","curveOptions","CustomSymbol","from","modifiers"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { ResponsiveLine } from '@nivo/line'\n\n\nexport default function SearchSunriseSunset(props) {\n\n    console.log(Object.values(props))\n    const [yearData, setYearData] = useState(\"\")\n\n\n    useEffect(() => {\n        let year = Object.values(props);\n        let API = `https://data.weather.gov.hk/weatherAPI/opendata/opendata.php?dataType=SRS&year=${year}&rformat=json`;\n            axios.get(API, {mode:'cors'}).then((response) => {\n                setYearData(response.data.data);\n            });\n        }, [props]);\n\n        // let sunriseStat = yearData.jsonarray.map(function(e) {\n        //     return e[0][1]\n        // })\n        // console.log(`sunriseStat`,sunriseStat)\n\n        // let sunriseData = [];\n        // for(var j = 0; j < yearData.length; j++) {\n        //     sunriseData.push({\"date\": yearData[j][0], \"time\": yearData[j][1]});\n        // }\n        // console.log(sunriseData);\n\n        let data= [\n            {\n                id: 'fake corp. A',\n                data: [\n                    { x: '2018-01-01', y: 7 },\n                    { x: '2018-01-02', y: 5 },\n                    { x: '2018-01-03', y: 11 },\n                    { x: '2018-01-04', y: 9 },\n                    { x: '2018-01-05', y: 12 },\n                    { x: '2018-01-06', y: 16 },\n                    { x: '2018-01-07', y: 13 },\n                    { x: '2018-01-08', y: 13 },\n                ],\n            },\n            {\n                id: 'fake corp. B',\n                data: [\n                    { x: '2018-01-04', y: 14 },\n                    { x: '2018-01-05', y: 14 },\n                    { x: '2018-01-06', y: 15 },\n                    { x: '2018-01-07', y: 11 },\n                    { x: '2018-01-08', y: 10 },\n                    { x: '2018-01-09', y: 12 },\n                    { x: '2018-01-10', y: 9 },\n                    { x: '2018-01-11', y: 7 },\n                ],\n            },\n        ]\n        return (<>\n            <ResponsiveLine\n            data={data}\n            margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n            xScale={{\n                type: 'time',\n                format: '%Y-%m-%d',\n                useUTC: false,\n                precision: 'day',\n            }}\n            xFormat=\"time:%Y-%m-%d\"\n            yScale={{\n                type: 'linear',\n                stacked: boolean('stacked', false),\n            }}\n            axisLeft={{\n                legend: 'linear scale',\n                legendOffset: 12,\n            }}\n            axisBottom={{\n                format: '%b %d',\n                tickValues: 'every 2 days',\n                legend: 'time scale',\n                legendOffset: -12,\n            }}\n            curve={select('curve', curveOptions, 'monotoneX')}\n            enablePointLabel={true}\n            pointSymbol={CustomSymbol}\n            pointSize={16}\n            pointBorderWidth={1}\n            pointBorderColor={{\n                from: 'color',\n                modifiers: [['darker', 0.3]],\n            }}\n            useMesh={true}\n            enableSlices={false}\n        />\n    </>)\n  \n}"]},"metadata":{},"sourceType":"module"}