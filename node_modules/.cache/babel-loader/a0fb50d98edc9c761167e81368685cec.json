{"ast":null,"code":"var _jsxFileName = \"/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/components/SearchSunriseSunset.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { ResponsiveLine } from '@nivo/line';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchSunriseSunset(props) {\n  _s();\n\n  const [yearData, setYearData] = useState(\"\");\n  useEffect(() => {\n    let year = Object.values(props);\n    let API = `https://data.weather.gov.hk/weatherAPI/opendata/opendata.php?dataType=SRS&year=${year}&rformat=json`;\n    axios.get(API, {\n      mode: 'cors'\n    }).then(response => {\n      setYearData(response.data.data);\n    });\n  }, [props]); // push all sunrise time in a array \n\n  let sunriseStat = [];\n  useEffect(() => {\n    for (let i = 0; i < yearData.length; i++) {\n      var _yearData$i, _yearData$i2;\n\n      sunriseStat.push({\n        \"x\": yearData === null || yearData === void 0 ? void 0 : (_yearData$i = yearData[i]) === null || _yearData$i === void 0 ? void 0 : _yearData$i[0],\n        \"y\": yearData === null || yearData === void 0 ? void 0 : (_yearData$i2 = yearData[i]) === null || _yearData$i2 === void 0 ? void 0 : _yearData$i2[1]\n      });\n    }\n\n    ;\n    console.log(`sunriseStat`, sunriseStat);\n  }, [yearData]); // push all sunrise time in a array \n\n  let sunsetStat = [];\n  useEffect(() => {\n    for (let i = 0; i < yearData.length; i++) {\n      var _yearData$i3, _yearData$i4;\n\n      sunsetStat.push({\n        \"x\": yearData === null || yearData === void 0 ? void 0 : (_yearData$i3 = yearData[i]) === null || _yearData$i3 === void 0 ? void 0 : _yearData$i3[0],\n        \"y\": yearData === null || yearData === void 0 ? void 0 : (_yearData$i4 = yearData[i]) === null || _yearData$i4 === void 0 ? void 0 : _yearData$i4[3]\n      });\n    }\n\n    ;\n    console.log(`sunsetStat`, sunsetStat);\n  }, [yearData]);\n  const data = [{\n    \"id\": \"Sunrise\",\n    \"color\": \"hsl(268, 70%, 50%)\",\n    \"data\": sunriseStat\n  }, {\n    \"id\": \"Sunset\",\n    \"color\": \"hsl(331, 70%, 50%)\",\n    \"data\": sunsetStat\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ResponsiveLine, {\n      data: data,\n      margin: {\n        top: 50,\n        right: 110,\n        bottom: 50,\n        left: 60\n      },\n      xScale: {\n        type: \"time\",\n        format: \"%Y-%m-%d\",\n        precision: 'day'\n      },\n      xFormat: \"time:%Y-%m-%d\",\n      yScale: {\n        type: \"linear\",\n        min: \"auto\",\n        max: \"auto\",\n        format: \"%Hh%M [%d]\",\n        stacked: false,\n        reverse: false\n      },\n      yFormat: \"time:%Hh%M [%d]\",\n      axisTop: null,\n      axisRight: null,\n      axisLeft: {\n        orient: \"left\",\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: \"Time\",\n        legendOffset: -40,\n        legendPosition: \"middle\"\n      },\n      axisBottom: {\n        format: \"%x\",\n        //tickValues: \"every 2 days\",\n        // tickRotation: -90,\n        legend: \"time scale\",\n        legendOffset: -12\n      },\n      colors: {\n        scheme: \"nivo\"\n      },\n      pointSize: 10,\n      pointColor: {\n        theme: \"background\"\n      },\n      pointBorderWidth: 2,\n      pointBorderColor: {\n        from: \"serieColor\"\n      },\n      pointLabel: \"y\",\n      pointLabelYOffset: -12,\n      useMesh: true,\n      legends: [{\n        anchor: \"bottom-right\",\n        direction: \"column\",\n        justify: false,\n        translateX: 100,\n        translateY: 0,\n        itemsSpacing: 0,\n        itemDirection: \"left-to-right\",\n        itemWidth: 80,\n        itemHeight: 20,\n        itemOpacity: 0.75,\n        symbolSize: 12,\n        symbolShape: \"circle\",\n        symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n        effects: [{\n          on: \"hover\",\n          style: {\n            itemBackground: \"rgba(0, 0, 0, .03)\",\n            itemOpacity: 1\n          }\n        }]\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(SearchSunriseSunset, \"8g/7MloqCINGyLkdqCOlzMVrSdI=\");\n\n_c = SearchSunriseSunset;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchSunriseSunset\");","map":{"version":3,"sources":["/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/components/SearchSunriseSunset.js"],"names":["axios","useState","useEffect","ResponsiveLine","SearchSunriseSunset","props","yearData","setYearData","year","Object","values","API","get","mode","then","response","data","sunriseStat","i","length","push","console","log","sunsetStat","top","right","bottom","left","type","format","precision","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","scheme","theme","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { ResponsiveLine } from '@nivo/line'\n\n\nexport default function SearchSunriseSunset(props) {\n    const [yearData, setYearData] = useState(\"\")\n\n    useEffect(() => {\n        let year = Object.values(props);\n        let API = `https://data.weather.gov.hk/weatherAPI/opendata/opendata.php?dataType=SRS&year=${year}&rformat=json`;\n            axios.get(API, {mode:'cors'}).then((response) => {\n                setYearData(response.data.data);\n            });\n        }, [props]);\n\n            \n        // push all sunrise time in a array \n        let sunriseStat = [];\n        useEffect(() => {\n            for (let i = 0; i < yearData.length; i++) {\n                sunriseStat.push({\"x\":yearData?.[i]?.[0],\"y\":yearData?.[i]?.[1]})\n            };\n                console.log(`sunriseStat`,sunriseStat)\n                \n        }, [yearData]);\n\n        // push all sunrise time in a array \n        let sunsetStat = [];\n        useEffect(() => {\n            for (let i = 0; i < yearData.length; i++) {\n                sunsetStat.push({\"x\":yearData?.[i]?.[0],\"y\":yearData?.[i]?.[3]})\n            };\n            console.log(`sunsetStat`,sunsetStat)\n        }, [yearData]);\n\n        const data = [\n                {\n                  \"id\": \"Sunrise\",\n                  \"color\": \"hsl(268, 70%, 50%)\",\n                  \"data\": sunriseStat\n                },\n                {\n                    \"id\": \"Sunset\",\n                    \"color\": \"hsl(331, 70%, 50%)\",\n                    \"data\": sunsetStat\n                  },\n            ]\n\n        return (\n        <>\n            <ResponsiveLine\n                data={data}\n                margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n                xScale={{\n                    type: \"time\",\n                    format: \"%Y-%m-%d\",\n                    precision: 'day'\n                }}\n                xFormat=\"time:%Y-%m-%d\"\n                yScale={{\n                    type: \"linear\",\n                    min: \"auto\",\n                    max: \"auto\",\n                    format: \"%Hh%M [%d]\",\n                    stacked: false,\n                    reverse: false,\n                }}\n                yFormat=\"time:%Hh%M [%d]\"\n                axisTop={null}\n                axisRight={null}\n                axisLeft={{\n                orient: \"left\",\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: \"Time\",\n                legendOffset: -40,\n                legendPosition: \"middle\"\n                }}\n                axisBottom={{\n                format: \"%x\",\n                //tickValues: \"every 2 days\",\n                // tickRotation: -90,\n                legend: \"time scale\",\n                legendOffset: -12\n                }}\n                colors={{ scheme: \"nivo\" }}\n                pointSize={10}\n                pointColor={{ theme: \"background\" }}\n                pointBorderWidth={2}\n                pointBorderColor={{ from: \"serieColor\" }}\n                pointLabel=\"y\"\n                pointLabelYOffset={-12}\n                useMesh={true}\n                legends={[\n                {\n                    anchor: \"bottom-right\",\n                    direction: \"column\",\n                    justify: false,\n                    translateX: 100,\n                    translateY: 0,\n                    itemsSpacing: 0,\n                    itemDirection: \"left-to-right\",\n                    itemWidth: 80,\n                    itemHeight: 20,\n                    itemOpacity: 0.75,\n                    symbolSize: 12,\n                    symbolShape: \"circle\",\n                    symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n                    effects: [\n                    {\n                        on: \"hover\",\n                        style: {\n                        itemBackground: \"rgba(0, 0, 0, .03)\",\n                        itemOpacity: 1\n                        }\n                    }\n                    ]\n                }\n                ]}\n            />   \n        </>)\n  \n}\n"]},"metadata":{},"sourceType":"module"}