{"ast":null,"code":"var _jsxFileName = \"/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/CurrentWeather.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = \"https://data.weather.gov.hk/weatherAPI/opendata/weather.php?dataType=rhrread&lang=en\";\nexport default function CurrentWeather() {\n  _s();\n\n  const [current, setCurrent] = useState(null);\n  const [loading, setloading] = useState(true);\n  const [region, setRegion] = useState(0);\n  const [filtered, setFiltered] = useState(null); // Get Request - CurrentWeather\n\n  useEffect(() => {\n    axios.get(baseURL).then(response => {\n      setCurrent(response.data.temperature.data);\n      setloading(false);\n    });\n  }, []);\n\n  const getRegion = e => {\n    setRegion(e.currentTarget.value);\n    setFiltered(current[e.currentTarget.value]);\n    console.log(`filtered`, filtered);\n  };\n\n  if (loading === true) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 35\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search_container row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search_dropbox col-lg-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"region\",\n          className: \"search_label\",\n          children: \"Please choose Region:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"region\",\n          name: \"regionlist\",\n          form: \"regionform\",\n          onChange: e => getRegion(e),\n          children: current !== null && current !== undefined ? current.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index,\n              children: data.place\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \" \"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"region_weather col-lg-3\",\n        children: filtered !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: filtered.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: current[region].value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false); //   if (current !== null && current !== undefined) {\n  //       return (\n  //           current.map((data, index) => {\n  //               return(\n  //                   <div key={index}>\n  //                       <p>{data.place}</p>\n  //                   </div>\n  //               )\n  //           })\n  //       )} else { \n  //           return (<p>Problem Occurs</p>) }\n}\n\n_s(CurrentWeather, \"ZohYjFnSWU6J/lMm23gpJ7XD6v0=\");\n\n_c = CurrentWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWeather\");","map":{"version":3,"sources":["/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/CurrentWeather.js"],"names":["axios","useState","useEffect","baseURL","CurrentWeather","current","setCurrent","loading","setloading","region","setRegion","filtered","setFiltered","get","then","response","data","temperature","getRegion","e","currentTarget","value","console","log","undefined","map","index","place"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,OAAO,GAAG,sFAAhB;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC,CAJuC,CAOvC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CAACa,GAAN,CAAUV,OAAV,EAAmBW,IAAnB,CAAyBC,QAAD,IAAc;AAClCT,MAAAA,UAAU,CAACS,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BD,IAA3B,CAAV;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMU,SAAS,GAAIC,CAAD,IAAO;AACvBT,IAAAA,SAAS,CAACS,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAT;AACAT,IAAAA,WAAW,CAACP,OAAO,CAACc,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,UAAb,EAAuBZ,QAAvB;AACD,GAJD;;AAOA,MAAIJ,OAAO,KAAK,IAAhB,EAAsB;AAAE,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAA2B;;AAEnD,sBACI;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,QAAf;AAAwB,UAAA,SAAS,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,EAAE,EAAC,QAAX;AAAoB,UAAA,IAAI,EAAC,YAAzB;AAAsC,UAAA,IAAI,EAAC,YAA3C;AAAwD,UAAA,QAAQ,EAAGY,CAAD,IAAOD,SAAS,CAACC,CAAD,CAAlF;AAAA,oBACCd,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAKmB,SAAhC,GACGnB,OAAO,CAACoB,GAAR,CAAY,CAACT,IAAD,EAAMU,KAAN,KAAgB;AACxB,gCAAQ;AAAoB,cAAA,KAAK,EAAEA,KAA3B;AAAA,wBAAmCV,IAAI,CAACW;AAAxC,eAAaD,KAAb;AAAA;AAAA;AAAA;AAAA,oBAAR;AACH,WAFD,CADH,gBAGM;AAAA;AAAA;AAJP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,kBACCf,QAAQ,KAAK,IAAb,gBACQ;AAAA,oBAAIA,QAAQ,CAACU;AAAb;AAAA;AAAA;AAAA;AAAA,gBADR,gBACkC;AAAA,oBAAIhB,OAAO,CAACI,MAAD,CAAP,CAAgBY;AAApB;AAAA;AAAA;AAAA;AAAA;AAFnC;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADJ,CAxBuC,CA2CzC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEC;;GAxDuBjB,c;;KAAAA,c","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nconst baseURL = \"https://data.weather.gov.hk/weatherAPI/opendata/weather.php?dataType=rhrread&lang=en\";\n\nexport default function CurrentWeather() {\n  const [current, setCurrent] = useState(null);\n  const [loading, setloading] = useState(true);\n  const [region, setRegion] = useState(0);\n  const [filtered, setFiltered] = useState(null);\n\n\n  // Get Request - CurrentWeather\n  useEffect(() => {\n    axios.get(baseURL).then((response) => {\n        setCurrent(response.data.temperature.data);\n        setloading(false);\n    })\n  }, []);\n\n  const getRegion = (e) => {\n    setRegion(e.currentTarget.value);\n    setFiltered(current[e.currentTarget.value])\n    console.log(`filtered`,filtered)\n  };\n\n\n  if (loading === true) { return (<p>loading...</p>)}\n\n  return (\n      <>\n        <div className=\"search_container row\">\n            <div className=\"search_dropbox col-lg-3\">\n                <label htmlFor=\"region\" className=\"search_label\">Please choose Region:</label>\n                <select id=\"region\" name=\"regionlist\" form=\"regionform\" onChange={(e) => getRegion(e)}>\n                {current !== null && current !== undefined ? \n                    current.map((data,index) => {\n                        return (<option key={index} value={index}>{data.place}</option>)\n                    }):<> </>}\n                </select>\n            </div>\n            <div className=\"region_weather col-lg-3\">\n            {filtered !== null  ? \n                    (<p>{filtered.value}</p>): <p>{current[region].value}</p>}\n            </div>\n        </div>\n      </>\n  )\n//   if (current !== null && current !== undefined) {\n//       return (\n//           current.map((data, index) => {\n//               return(\n//                   <div key={index}>\n//                       <p>{data.place}</p>\n\n//                   </div>\n//               )\n//           })\n//       )} else { \n//           return (<p>Problem Occurs</p>) }\n\n}"]},"metadata":{},"sourceType":"module"}