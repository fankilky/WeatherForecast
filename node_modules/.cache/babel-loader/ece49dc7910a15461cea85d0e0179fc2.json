{"ast":null,"code":"var _jsxFileName = \"/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/SunriseSunset.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // import date picker\n\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main css file\n\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nimport { addDays } from 'date-fns';\nimport SearchSunriseSunset from './components/SearchSunriseSunset';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SunriseSunset() {\n  _s();\n\n  const [dateRange, setdateRange] = useState([{\n    startDate: new Date(),\n    endDate: addDays(new Date(), 7),\n    key: 'selection'\n  }]);\n  console.log(`dateRange`, dateRange);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DateRangePicker, {\n      onChange: item => setdateRange([item.selection]),\n      showSelectionPreview: true,\n      moveRangeOnFirstSelection: false,\n      minDate: new Date(\"01-01-2018\"),\n      maxDate: new Date(\"12-31-2023\"),\n      months: 2,\n      ranges: dateRange,\n      direction: \"horizontal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchSunriseSunset, {\n      dateRange: dateRange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true); // if (sunrise !== null && sunrise !== undefined) {\n  //     return (\n  //         sunrise.map((data, index) => {\n  //             return(\n  //                 <div className={index}>\n  //                     <p>{data}</p>\n  //                 </div>\n  //             )\n  //         })\n  //     )} else { \n  //         return (<p>Problem Occurs</p>) }\n}\n\n_s(SunriseSunset, \"Gc6uvu5mXTRgZJ9MkSbJjdFDlj8=\");\n\n_c = SunriseSunset;\n\nvar _c;\n\n$RefreshReg$(_c, \"SunriseSunset\");","map":{"version":3,"sources":["/Users/likingyan/Documents/Butler/ButlerWeatherForecast/src/pages/SunriseSunset.js"],"names":["useState","DateRangePicker","addDays","SearchSunriseSunset","SunriseSunset","dateRange","setdateRange","startDate","Date","endDate","key","console","log","item","selection"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAO,kCAAP,C,CAA2C;;AAC3C,OAAO,yCAAP,C,CAAkD;;AAClD,SAASC,OAAT,QAAwB,UAAxB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;;;AAGA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AAEtC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CACzC;AACEO,IAAAA,SAAS,EAAE,IAAIC,IAAJ,EADb;AAEEC,IAAAA,OAAO,EAAEP,OAAO,CAAC,IAAIM,IAAJ,EAAD,EAAa,CAAb,CAFlB;AAGEE,IAAAA,GAAG,EAAE;AAHP,GADyC,CAAD,CAA1C;AASAC,EAAAA,OAAO,CAACC,GAAR,CAAa,WAAb,EAAwBP,SAAxB;AACA,sBACI;AAAA,4BACE,QAAC,eAAD;AACI,MAAA,QAAQ,EAAEQ,IAAI,IAAIP,YAAY,CAAC,CAACO,IAAI,CAACC,SAAN,CAAD,CADlC;AAEI,MAAA,oBAAoB,EAAE,IAF1B;AAGI,MAAA,yBAAyB,EAAE,KAH/B;AAII,MAAA,OAAO,EAAE,IAAIN,IAAJ,CAAS,YAAT,CAJb;AAKI,MAAA,OAAO,EAAE,IAAIA,IAAJ,CAAS,YAAT,CALb;AAMI,MAAA,MAAM,EAAE,CANZ;AAOI,MAAA,MAAM,EAAEH,SAPZ;AAQI,MAAA,SAAS,EAAC;AARd;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,mBAAD;AAAqB,MAAA,SAAS,EAAEA;AAAhC;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADJ,CAZsC,CA4BpC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGH;;GA1CuBD,a;;KAAAA,a","sourcesContent":["import { useState } from \"react\";\n// import date picker\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport { addDays } from 'date-fns';\nimport SearchSunriseSunset from './components/SearchSunriseSunset';\n\n\nexport default function SunriseSunset() {\n\n  const [dateRange, setdateRange] = useState([\n    {\n      startDate: new Date(),\n      endDate: addDays(new Date(), 7),\n      key: 'selection',\n\n    }\n  ]);\n\n  console.log(`dateRange`,dateRange);\n  return(\n      <>\n        <DateRangePicker\n            onChange={item => setdateRange([item.selection])}\n            showSelectionPreview={true}\n            moveRangeOnFirstSelection={false}\n            minDate={new Date(\"01-01-2018\")}\n            maxDate={new Date(\"12-31-2023\")}\n            months={2}\n            ranges={dateRange}\n            direction=\"horizontal\"\n        />\n        <SearchSunriseSunset dateRange={dateRange} />\n      </>\n    )\n\n    // if (sunrise !== null && sunrise !== undefined) {\n    //     return (\n    //         sunrise.map((data, index) => {\n    //             return(\n    //                 <div className={index}>\n    //                     <p>{data}</p>\n\n    //                 </div>\n    //             )\n    //         })\n    //     )} else { \n    //         return (<p>Problem Occurs</p>) }\n\n\n}"]},"metadata":{},"sourceType":"module"}